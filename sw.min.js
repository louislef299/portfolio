(function(){const t="static",e="v1::",n="https://louislef299.github.io/off/";function o(){const s=["https://louislef299.github.io/","https://louislef299.github.io/manifest.json","/portfolio/css/index.min.97f4541eb27744b6a54145d526f9874779a121ace6c70b52fab46dcb282687a373e3d23915a36de5c0c2fd74ae63e924b57d908b62c7e4aaac314171cbec7cd1.css","/portfolio/index.min.js","https://louislef299.github.io/portfolio/image/background.svg","https://louislef299.github.io/portfolio/image/background-dark_huacd336bfb7f5597695f9c32d4115a2aa_1561823_1400x787_fill_q75_box_smart1.jpg",n,"https://louislef299.github.io/portfolio/image/logo.min.svg","https://louislef299.github.io/index.json"];return caches.open(e+t).then(e=>e.addAll(s)).catch(e=>{console.log("Error = ",e),console.log(e.stack)})}self.addEventListener("install",e=>e.waitUntil(o())),self.addEventListener("activate",function(t){t.waitUntil(caches.keys().then(function(t){return Promise.all(t.filter(t=>t.indexOf(e)!==0).map(e=>caches.delete(e)))}))});function s(){return caches.match(n).then(e=>e.text()).then(e=>new Response(e,{status:200,headers:{"Content-Type":"text/html"}}))}self.addEventListener("fetch",function(n){const o=n.request;if(o.method!=="GET")return n.respondWith(fetch(o).catch(s));if(o.headers.get("Accept").indexOf("text/html")!==-1){n.respondWith(fetch(o).then(function(n){const s=n.clone();return caches.open(e+t).then(function(e){e.put(o,s)}),n}).catch(function(){return caches.match(o).then(function(e){return e||s()})}));return}n.respondWith(caches.match(o).then(function(e){return e||fetch(o).catch(function(){return o.url.match(/\.(jpe?g|png|gif|svg)$/)?new Response('<svg role="img" aria-labelledby="offline-title" viewBox="0 0 400 225" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice"><title id="offline-title">Offline</title><path fill="rgba(145,145,145,0.5)" d="M0 0h400v225H0z" /><text fill="rgba(0,0,0,0.33)" font-family="Helvetica Neue,Arial,sans-serif" font-size="27" text-anchor="middle" x="200" y="113" dominant-baseline="central">Offline</text></svg>',{headers:{"Content-Type":"image/svg+xml"}}):new Response("")})}))})})()